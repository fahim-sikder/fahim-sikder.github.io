<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Md Fahim Sikder</title>
    <link>https://fahim-sikder.github.io/</link>
      <atom:link href="https://fahim-sikder.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Md Fahim Sikder</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â©Md Fahim Sikder</copyright><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://fahim-sikder.github.io/media/sharing.jpg</url>
      <title>Md Fahim Sikder</title>
      <link>https://fahim-sikder.github.io/</link>
    </image>
    
    <item>
      <title>Example Talk</title>
      <link>https://fahim-sikder.github.io/talk/example-talk/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://fahim-sikder.github.io/talk/example-talk/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Wowchemy&amp;rsquo;s &lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further event details, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;page elements&lt;/a&gt; such as image galleries, can be added to the body of this page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Texlive Latest Version (Texlive-2021) on Ubuntu-20.04/18.04</title>
      <link>https://fahim-sikder.github.io/post/installing-texlive-latest-ubuntu/</link>
      <pubDate>Fri, 01 Oct 2021 10:29:54 +0200</pubDate>
      <guid>https://fahim-sikder.github.io/post/installing-texlive-latest-ubuntu/</guid>
      <description>&lt;p&gt;Hello there! In this tutorial, we will learn how to install the latest version of texlive in the ubuntu system! Generally, Ubuntu 20.04 / 18.04 only install Texlive-version-2019 from the local repository! But the Texlive current version is 2021! So, a lot happened in these updates. So, we need to install the 2021 version from the source! But before we do that, we have to uninstall any existing Texlive installation.&lt;/p&gt;
&lt;h3 id=&#34;uninstalling-existing-texlive&#34;&gt;Uninstalling existing Texlive&lt;/h3&gt;
&lt;p&gt;Use the following command from the terminal to remove the existing installation of Texlive [3].&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo apt-get purge texlive*

$ sudo rm -rf /usr/local/texlive/*

$ rm -rf ~/.texlive*

$ sudo rm -rf /usr/local/share/texmf

$ sudo rm -rf /var/lib/texmf

$ sudo rm -rf /etc/texmf

$ sudo apt-get remove tex-common --purge

$ rm -rf ~/.texlive
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These commands should remove delete any existing texlive installation.&lt;/p&gt;
&lt;h3 id=&#34;installing-texlive-2021&#34;&gt;Installing Texlive-2021&lt;/h3&gt;
&lt;p&gt;Now it&amp;rsquo;s time for install the Texlive latest version! But first, we have to install some dependency [2]!&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo apt install wget perl-tk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We need to get the official installer for Texlive. We can do that by using the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
$ tar -xzf install-tl-unx.tar.gz
$ cd install-tl-****
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, **** means the version of the installer! Replace the **** according to your downloaded filename. After changing the directory to the downloaded folder, run the installer by using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo ./install-tl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Installation of the latest version of the texlive should start. After the installation, we need to add the installation path with variables to the &lt;code&gt;.bashrc&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo vim ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the following variables to the file:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;export PATH=/usr/local/texlive/2021/bin/x86_64-linux${PATH:+:${PATH}}
export INFOPATH=/usr/local/texlive/2021/texmf-dist/doc/info${INFOPATH:+:${INFOPATH}}
export MANPATH=/usr/local/texlive/2021/texmf-dist/doc/man${MANPATH:+:${MANPATH}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After this, texlive should be installed in the system. We can check it by typing &lt;code&gt;which tex&lt;/code&gt; in the terminal. It should return the path where texlive is installed! Now we have to make sure that Ubuntu thinks we have installed texlive. We can do that by installing the &lt;code&gt;equivs&lt;/code&gt; package!&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo apt install equivs --no-install-recommends freeglut3
$ wget -O debian-equivs-2021-ex.txt https://www.tug.org/texlive/files/debian-equivs-2021-ex.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We are using the &lt;code&gt;debian-equivs-2021-ex.txt&lt;/code&gt; file to build a &lt;code&gt;.deb&lt;/code&gt; file to install the necessary packages. To build the file and install it follow this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ equivs-build debian-equivs-2021-ex.txt
$ sudo dpkg -i texlive-local_2021.99999999-1_all.deb
$ sudo apt install -f
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After this, Texlive should be working just fine in Ubuntu!&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;h3 id=&#34;common-issues-in-installation&#34;&gt;Common Issues in Installation&lt;/h3&gt;
&lt;h4 id=&#34;installing-packages-using-texlive-manager-tlmgr&#34;&gt;Installing Packages Using Texlive Manager (tlmgr)&lt;/h4&gt;
&lt;p&gt;If we need to install / update packages in our texlive installations, we can use the &lt;code&gt;Texlive manager (tlmgr)&lt;/code&gt;. We can open the &lt;code&gt;tlmgr&lt;/code&gt; by typing the following in the terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo tlmgr --gui
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But sometimes, it can give the error, such as: &lt;code&gt;tlmgr: command not found&lt;/code&gt;. If this happens, do the following to open the texlive manager [2]:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo env PATH=&amp;quot;$PATH&amp;quot; tlmgr --gui
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, it should work!&lt;/p&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tug.org/texlive/doc/texlive-en/texlive-en.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Texlive Official Guide 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tex.stackexchange.com/questions/1092/how-to-install-vanilla-texlive-on-debian-or-ubuntu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Post about installing Texlive: Answer Section&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tex.stackexchange.com/questions/95483/how-to-remove-everything-related-to-tex-live-for-fresh-install-on-ubuntu&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Post about removing Texlive: Answer Section&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Measuring the Fairness, Privacy and Accuracy of Time-Series Generative Models - A Survey</title>
      <link>https://fahim-sikder.github.io/publication/fairness-survey/</link>
      <pubDate>Sun, 20 Jun 2021 19:48:37 +0200</pubDate>
      <guid>https://fahim-sikder.github.io/publication/fairness-survey/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Installing Docker, Creating &amp; Running First Python Script Using it on Ubuntu 20.04 LTS</title>
      <link>https://fahim-sikder.github.io/post/install-docker-ubuntu/</link>
      <pubDate>Sat, 26 Dec 2020 08:21:34 +0100</pubDate>
      <guid>https://fahim-sikder.github.io/post/install-docker-ubuntu/</guid>
      <description>&lt;p&gt;I always get in trouble when creating a new project with different dependencies installed on my machine. I had to reinstall new libraries, which is doing a new thing repeatedly, and it&amp;rsquo;s time-consuming. Then I learned about docker. Docker will allow you to create a virtual machine to install all your dependencies for your specific project without tempering your primary system. Still, it is faster than the virtual machine. In this tutorial, we are going to see:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Installing docker on ubuntu 20.04 LTS&lt;/li&gt;
&lt;li&gt;Creating and running a python script using docker image&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;installing-docker&#34;&gt;Installing Docker&lt;/h2&gt;
&lt;p&gt;For installing docker from the website for the different OS, you can visit &lt;a href=&#34;https://docs.docker.com/get-docker/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here.&lt;/a&gt; First of all, we are going to uninstall previously installed docker (if have any). We will run the following command in the terminal to do that:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo apt-get remove docker docker-engine docker.io containerd runc
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;setting-up-the-repository&#34;&gt;Setting up the Repository&lt;/h4&gt;
&lt;p&gt;Then we need to update the &lt;code&gt;apt&lt;/code&gt; packages and install the following dependencies by running the commands:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo apt-get update
$ sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we need to add the Docker&amp;rsquo;s official GPG key to the system.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will use the following command to set up the stable repository.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo add-apt-repository \
   &amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;installing-docker-engine&#34;&gt;Installing Docker Engine&lt;/h4&gt;
&lt;p&gt;To install the docker engine first we have to update the &lt;code&gt;apt&lt;/code&gt; package again and run the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo apt-get update
$ sudo apt-get install docker-ce docker-ce-cli containerd.io
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, the docker should be installed in our system, but before we test it, first we need to add the docker into usergroup, otherwise in some system it will give error. We can do this by using the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo groupadd docker
$ sudo usermod -a -G docker ${USER}
$ grep docker /etc/group
$ newgrp docker
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After running this command, &lt;strong&gt;you have to logout or restart the pc&lt;/strong&gt;. Then run the following command to test the docker system.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ sudo docker run hello-world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will download a test container and print some messages and then it will exit.&lt;/p&gt;
&lt;h2 id=&#34;creating-first-docker-script&#34;&gt;Creating First Docker Script&lt;/h2&gt;
&lt;p&gt;Now, it&amp;rsquo;s time to create our first program that will run on docker. Here we will create a simple script that will measure the square root of a number using the python&amp;rsquo;s &lt;code&gt;NumPy&lt;/code&gt; library. So, in this program, we have a dependency, and that is NumPy. We have to install the dependency inside our docker container. First, we will create a folder containing all the necessary things such as python file, docker image etc.&lt;/p&gt;
&lt;p&gt;Then we will create the python script which we will run, let&amp;rsquo;s name it &lt;code&gt;main.py&lt;/code&gt; and write the following code into that.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np

a = np.sqrt(16)

print(f&#39;The square root of 16 is {a}&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, let&amp;rsquo;s create a file name &lt;code&gt;Dockerfile&lt;/code&gt;. This file is the blueprint of the docker image. &lt;em&gt;&amp;ldquo;A docker image is a combination of a file system and &lt;a href=&#34;https://searchitoperations.techtarget.com/definition/Docker-image&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;parameters&lt;/a&gt;.&amp;quot;&lt;/em&gt; In other words, this file will contain the information on the working environment, dependencies etc. of our docker app. And the docker container (it&amp;rsquo;s an instance of docker image) will run the docker system.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s put the following lines in the &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;FROM python:3.8

ADD main.py .

RUN pip install numpy

CMD [&amp;quot;python&amp;quot;, &amp;quot;main.py&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, let&amp;rsquo;s understand what these lines represent. The docker needs an environment where the docker will run, and this environment can be an operating system, a software package, a python environment etc. Here we are using Python version 3.8 as our environment. By executing &lt;code&gt;FROM python:3.8&lt;/code&gt; line, the docker container pulls python version 3.8 from the docker &lt;a href=&#34;https://hub.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hub&lt;/a&gt;. To add the python script in the docker current directory, we will use &lt;code&gt;ADD main.py .&lt;/code&gt; line. The &lt;code&gt;.&lt;/code&gt; specifies the current directory. Now, we will be going to install the dependencies, in the python script we have only one dependency, and that is numpy. So to install the NumPy dependency, we are using &lt;code&gt;RUN pip install numpy&lt;/code&gt;. If your program has other dependencies, you can add them in this line. And finally, to run the python script, we will use &lt;code&gt;CMD&lt;/code&gt; command. Usually, we run a python script in the terminal by using &lt;code&gt;python main.py&lt;/code&gt; command. Just like this, we will pass this command into a tokenized list with the &lt;code&gt;CMD&lt;/code&gt; command. So, &lt;code&gt;CMD [&amp;quot;python&amp;quot;, &amp;quot;main.py&amp;quot;]&lt;/code&gt; will run the python script inside the docker container.&lt;/p&gt;
&lt;h4 id=&#34;building-the-docker-image&#34;&gt;Building the Docker Image&lt;/h4&gt;
&lt;p&gt;We have the &lt;code&gt;Dockerfile&lt;/code&gt; ready, and we now know what it contains and what the lines inside the &lt;code&gt;Dockerfile&lt;/code&gt; does, it is time to build the docker image! To build the docker image, we need to give the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker build -t first-docker .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here &lt;code&gt;first-docker&lt;/code&gt; is our docker image name. We can name it whatever we want. And the &lt;code&gt;-t&lt;/code&gt; argument is used for tagging the resulting image. After running this command, it will look like the following screenshot.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Build Docker&#34; srcset=&#34;
               /post/install-docker-ubuntu/build_hu34424acdaa48457dcc75561f9fd871b4_123340_8d350eb98383005b5288fd6c9a1ee944.webp 400w,
               /post/install-docker-ubuntu/build_hu34424acdaa48457dcc75561f9fd871b4_123340_1cfeacf602158657f7709a5f15821d44.webp 760w,
               /post/install-docker-ubuntu/build_hu34424acdaa48457dcc75561f9fd871b4_123340_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://fahim-sikder.github.io/post/install-docker-ubuntu/build_hu34424acdaa48457dcc75561f9fd871b4_123340_8d350eb98383005b5288fd6c9a1ee944.webp&#34;
               width=&#34;760&#34;
               height=&#34;635&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 id=&#34;running-the-docker-image&#34;&gt;Running the Docker Image&lt;/h4&gt;
&lt;p&gt;So, our docker image is now ready. To run our image we need to give the following command in the terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run first-docker
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command will run the docker image and give the output of the python script we have written. In our case, we have calculated the square root of 16 using NumPy&amp;rsquo;s sqrt function. So we will see the result like the following screenshot.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Run Docker&#34; srcset=&#34;
               /post/install-docker-ubuntu/run_hu15eac8b91ece8f57e05260ccb59d230d_11235_c8b6f5a8052ff64f6df98412ff5d15c2.webp 400w,
               /post/install-docker-ubuntu/run_hu15eac8b91ece8f57e05260ccb59d230d_11235_80a7f91bfed3c29879e350203f3f4f80.webp 760w,
               /post/install-docker-ubuntu/run_hu15eac8b91ece8f57e05260ccb59d230d_11235_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://fahim-sikder.github.io/post/install-docker-ubuntu/run_hu15eac8b91ece8f57e05260ccb59d230d_11235_c8b6f5a8052ff64f6df98412ff5d15c2.webp&#34;
               width=&#34;658&#34;
               height=&#34;155&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Congratulations! We have just run our first docker app. We can do more complex things with docker, keep digging. The code for this tutorial can be found in &lt;a href=&#34;https://github.com/fahim-sikder/docker-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Have fun and Stay Safe!&lt;/p&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker official installation procedure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>How to Install R and two most popular R packages (tidyverse &amp; rstan) in Ubuntu 20.04 LTS</title>
      <link>https://fahim-sikder.github.io/post/how-to-install-r-ubuntu-20/</link>
      <pubDate>Sun, 06 Sep 2020 20:39:11 +0600</pubDate>
      <guid>https://fahim-sikder.github.io/post/how-to-install-r-ubuntu-20/</guid>
      <description>&lt;p&gt;Hello there! In this post, we are going to see how we can install &lt;code&gt;R&lt;/code&gt; in our Ubuntu 20.04 LTS. Also, we will install two of R&amp;rsquo;s popular packages, namely: &lt;a href=&#34;https://www.tidyverse.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tidyverse&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://mc-stan.org/users/interfaces/rstan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rstan&lt;/a&gt;. Both of these packages are important tools for data scientists. Rstan is the R interface for &lt;a href=&#34;https://mc-stan.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;stan&lt;/a&gt;, which is the state-of-the-art platform for statistical modeling and high-performance statistical computation. I faced so much difficulty installing these. So, I decided to make it simple for you guys.&lt;/p&gt;
&lt;h3 id=&#34;installing-r&#34;&gt;Installing R&lt;/h3&gt;
&lt;p&gt;First, let&amp;rsquo;s install the &lt;code&gt;R&lt;/code&gt; in our system. We will install R from &lt;a href=&#34;https://cran.r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRAN&lt;/a&gt; repository. We need to install some dependencies for adding a new repository over HTTPS. To do that, we will run the following command in our terminal.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo apt-get install dirmngr gnupg apt-transport-https ca-certificates software-properties-common
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, we need to add the CRAN repository to our system sourcesâ list. We can do that by typing the following commands into our terminal.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
sudo add-apt-repository &#39;deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we will install R by using the following command.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo apt-get install r-base
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, the R should be installed in our system. To check that, we can run the following command into our terminal.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;R
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If R is installed correctly, the console will show something like this:&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Figure 1&#34; srcset=&#34;
               /post/how-to-install-r-ubuntu-20/r_hufd30d648919556e88c13f92b33f4636e_49944_3d035cf8d800d62a33cf23abd6665cd3.webp 400w,
               /post/how-to-install-r-ubuntu-20/r_hufd30d648919556e88c13f92b33f4636e_49944_7cb6e37a56768140bdb44f1be7e610ad.webp 760w,
               /post/how-to-install-r-ubuntu-20/r_hufd30d648919556e88c13f92b33f4636e_49944_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://fahim-sikder.github.io/post/how-to-install-r-ubuntu-20/r_hufd30d648919556e88c13f92b33f4636e_49944_3d035cf8d800d62a33cf23abd6665cd3.webp&#34;
               width=&#34;731&#34;
               height=&#34;388&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;installing-tidyverse&#34;&gt;Installing tidyverse&lt;/h3&gt;
&lt;p&gt;Now, we will install the tidyverse packages. &lt;strong&gt;Please note that we need to install &lt;code&gt;tidyverse&lt;/code&gt; first then install &lt;code&gt;rstan&lt;/code&gt;, because &lt;code&gt;rstan&lt;/code&gt; requires some dependencies. By installing &lt;code&gt;tidyverse&lt;/code&gt; first, it will make the job easier.&lt;/strong&gt; First of all, we need to install some dependencies by typing the following commands in our terminal.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev libv8-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then install &lt;code&gt;tidyverse&lt;/code&gt; by using the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo R
install.packages(&#39;tidyverse&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It will take some time to get installed. After installation, exit from the &lt;code&gt;r&lt;/code&gt; environment using the &lt;code&gt;q()&lt;/code&gt; function and be sure to save the environment when prompted.&lt;/p&gt;
&lt;h3 id=&#34;installing-rstan&#34;&gt;Installing rstan&lt;/h3&gt;
&lt;p&gt;To install the rstan, we need first check if our system has rstan already installed. If it has, then we need to remove it. We can do this by using the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;remove.packages(&amp;quot;rstan&amp;quot;)
if (file.exists(&amp;quot;.RData&amp;quot;)) file.remove(&amp;quot;.RData&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, we need to check the c++ toolchain. We can do that by using these commands:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo R
pkgbuild::has_build_tools(debug = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command will check if the installed c++ is using the pkgbuild package. The system will give the output &lt;code&gt;TRUE&lt;/code&gt; if it is using the pkgbuild package. Otherwise, we need to follow instructions from &lt;a href=&#34;https://github.com/stan-dev/rstan/wiki/Installing-RStan-on-Linux&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, run the following command to install rstan.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;install.packages(&amp;quot;rstan&amp;quot;, repos = &amp;quot;https://cloud.r-project.org/&amp;quot;, dependencies = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again, it will take some time to get installed. After the installations, exit from the &lt;code&gt;r&lt;/code&gt; environment using &lt;code&gt;q()&lt;/code&gt; function and be sure to save the environment when prompted.&lt;/p&gt;
&lt;p&gt;Happy Coding!!!&lt;/p&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxize.com/post/how-to-install-r-on-ubuntu-20-04/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Blog post on installing R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Official instruction of installing rstan&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Julia Tutorial Part 2: Data Structures</title>
      <link>https://fahim-sikder.github.io/post/julia-tutorial-part-2-data-structures/</link>
      <pubDate>Thu, 30 Jul 2020 10:50:26 +0600</pubDate>
      <guid>https://fahim-sikder.github.io/post/julia-tutorial-part-2-data-structures/</guid>
      <description>&lt;h2 id=&#34;data-structures&#34;&gt;Data Structures&lt;/h2&gt;
&lt;p&gt;In this tutorial, we will see &lt;code&gt;Julia&#39;s&lt;/code&gt; data structure. Namely,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Tuple,&lt;/li&gt;
&lt;li&gt;Array,&lt;/li&gt;
&lt;li&gt;Dictionary, and&lt;/li&gt;
&lt;li&gt;Set&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;tuple&#34;&gt;Tuple&lt;/h3&gt;
&lt;p&gt;Lets first discuss about &lt;code&gt;Tuple&lt;/code&gt;. Tuple and Array can hold a list of elements. But the basic difference between them is, &lt;code&gt;Tuple&lt;/code&gt; is immutable. It means that, we can&amp;rsquo;t change the value of a tuple once it&amp;rsquo;s created. We can create a tuple by giving some ordered elements into a paranthesis &lt;code&gt;( )&lt;/code&gt;. The syntax of a tuple is as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;(item1, item2, itme3, ...)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s see an example. Suppose we want to create a tuple consists of some mixed values. We just give those values within a paranthesis &lt;code&gt;( )&lt;/code&gt; or just without the parenthesis. Both will work just fine. Then we can print the type of the tuple by using the &lt;code&gt;typeof()&lt;/code&gt; method. To access the elements of a tuple, we can use the index values of tuple, but keep in mind in &lt;code&gt;Julia&lt;/code&gt;, index starts from 1. So, in order to access the first element of tuple, we need to follow this syntax:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
tuple_name[1]

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;tup1 = (1, 2, 4.5, &amp;quot;Hello&amp;quot;)

println(tup1)

#this also works

tup2 = &#39;c&#39;, 11, 0.5, &amp;quot;World&amp;quot;

print(tup2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;(1, 2, 4.5, &amp;quot;Hello&amp;quot;)
(&#39;c&#39;, 11, 0.5, &amp;quot;World&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-1&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;println(&amp;quot;Type of tup1: &amp;quot;, typeof(tup1))
println(&amp;quot;Type of tup2: &amp;quot;, typeof(tup2))
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-1&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Type of tup1: Tuple{Int64,Int64,Float64,String}
Type of tup2: Tuple{Char,Int64,Float64,String}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-2&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;#accessing Elements

println(tup1[1])
println(tup2[end])
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-2&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;1
World
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As, we were saying earlier that, tuples are immuatble. That means, we can not change the elements of a tuple after it has been initialized. Let&amp;rsquo;s test that. We will try to change the third element of &lt;code&gt;tup1&lt;/code&gt;. And it will give an error.&lt;/p&gt;
&lt;h4 id=&#34;_input_-3&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;tup1[3] = &#39;c&#39; 
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-3&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;MethodError: no method matching setindex!(::Tuple{Int64,Int64,Float64,String}, ::Char, ::Int64)



Stacktrace:

 [1] top-level scope at In[4]:1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is an another version of tuples and it is called &lt;strong&gt;NamedTuples&lt;/strong&gt;. Here, we can assign an unique name to each elements of the tuple to access them.&lt;/p&gt;
&lt;p&gt;To access by using its name we need to use the following syntax:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
tuple_name.variable_name

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-4&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;named_tup = (lang = &#39;C&#39;, int_num = 1, float_num = 3.6)

println(&amp;quot;Elements of named_tuple: &amp;quot;, named_tup)

println(&amp;quot;Accessing first element by index: &amp;quot;, named_tup[1])

println(&amp;quot;Accessing first element by using variable name: &amp;quot;, named_tup.lang)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-4&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Elements of named_tuple: (lang = &#39;C&#39;, int_num = 1, float_num = 3.6)
Accessing first element by index: C
Accessing first element by using variable name: C
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;array&#34;&gt;Array&lt;/h3&gt;
&lt;p&gt;Unlike Tuples, Arrays are mutable. So, after assigning values we can change them. We can declare an array in many ways. such as:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
array_name = [item1, item2, ...]
array_name = Array([item1, item2, ...])
array_name = Array{DataType}([item1, item2, ...])

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here in the third syntax of declaring array, we can specify what kind of data we want to assign in our array. Lets, create three arrays using these syntax.&lt;/p&gt;
&lt;h4 id=&#34;_input_-5&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;arr1 = [1, 2, 3]
arr2 = Array([2.5, &amp;quot;Hello&amp;quot;, 100])
arr3 = Array{Int64}([4, 6, 8])

println(&amp;quot;Elements of arr1: &amp;quot;, arr1)
println(&amp;quot;Elements of arr2: &amp;quot;, arr2)
println(&amp;quot;Elements of arr3: &amp;quot;, arr3)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-5&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Elements of arr1: [1, 2, 3]
Elements of arr2: Any[2.5, &amp;quot;Hello&amp;quot;, 100]
Elements of arr3: [4, 6, 8]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These are the example of 1 dimensional array. The syntax of declaring 2 dimensional array is follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
array_2d = [item1 item2; item3 item4; ...]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s create an array which has 3 row and 2 columns or an &lt;code&gt;(3*2)&lt;/code&gt; array.&lt;/p&gt;
&lt;h4 id=&#34;_input_-6&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;arr_2d =[1 2; 3 4; 5 6]

arr_2d
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-6&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;3Ã2 Array{Int64,2}:
 1  2
 3  4
 5  6
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;array-operations&#34;&gt;Array Operations&lt;/h4&gt;
&lt;p&gt;To insert, delete or sort elements of an array we can use some built in methods like &lt;code&gt;insert(), deleteat(), push(), pushfirst(), pop(), popfirst(), sort()&lt;/code&gt;. Let&amp;rsquo;s use these methods. To insert elements in an array we can use &lt;code&gt;push()&lt;/code&gt;, &lt;code&gt;pushfirst()&lt;/code&gt; and &lt;code&gt;insert()&lt;/code&gt; methods. &lt;code&gt;push()&lt;/code&gt; method insert an element in the end of the array, &lt;code&gt;pushfirst()&lt;/code&gt; inserts an item at the begining of the array, and &lt;code&gt;insert()&lt;/code&gt; method insert an item into a given location. The syntax of &lt;code&gt;insert()&lt;/code&gt; method is&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
insert(arr_name, position_to_insert, value)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s first insert into an array.&lt;/p&gt;
&lt;h4 id=&#34;_input_-7&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;test_arr = [1, 2, 3, 4, 5]

push!(test_arr, 100)

println(&amp;quot;Array after using push method: &amp;quot;, test_arr)

pushfirst!(test_arr, 12)

println(&amp;quot;Array after using pushfirst method: &amp;quot;, test_arr)

insert!(test_arr, 3, 2525)

println(&amp;quot;Array after using insert method: &amp;quot;, test_arr)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-7&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Array after using push method: [1, 2, 3, 4, 5, 100]
Array after using pushfirst method: [12, 1, 2, 3, 4, 5, 100]
Array after using insert method: [12, 1, 2525, 2, 3, 4, 5, 100]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To delete elements in an array, we can use &lt;code&gt;pop()&lt;/code&gt;, &lt;code&gt;popfirst()&lt;/code&gt; and &lt;code&gt;deleteat()&lt;/code&gt; methods. &lt;code&gt;pop()&lt;/code&gt; method deletes an element from the end of the array, &lt;code&gt;popfirst()&lt;/code&gt; deletes an item from the begining of the array, and &lt;code&gt;deleteat()&lt;/code&gt; method deletes an item from a given location. The syntax of &lt;code&gt;deleteat()&lt;/code&gt; method is&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
deleteat(arr_name, position_for_delete)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will use the same array which we used with insertion methods.&lt;/p&gt;
&lt;h4 id=&#34;_input_-8&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;println(&amp;quot;Array before deleting elements: &amp;quot;, test_arr)

pop!(test_arr)

println(&amp;quot;Array after using pop method: &amp;quot;, test_arr)

popfirst!(test_arr)

println(&amp;quot;Array after using popfirst method: &amp;quot;, test_arr)

deleteat!(test_arr, 4)

println(&amp;quot;Array after using deleteat method at the 4th index: &amp;quot;, test_arr)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-8&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Array before deleting elements: [12, 1, 2525, 2, 3, 4, 5, 100]
Array after using pop method: [12, 1, 2525, 2, 3, 4, 5]
Array after using popfirst method: [1, 2525, 2, 3, 4, 5]
Array after using deleteat method at the 4th index: [1, 2525, 2, 4, 5]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Besides these inserting and deletion methods, there are some methods for other helpful tasks. Here, we will try to mention some of the methods. For sorting we can use &lt;code&gt;sort()&lt;/code&gt; method. Also, if we want arrays of ones or zeros we can use &lt;code&gt;ones()&lt;/code&gt; and &lt;code&gt;zeros()&lt;/code&gt; method respectively. We can generate random number from uniform distribution using &lt;code&gt;rand()&lt;/code&gt; method. To create random number from normal distribution we can use &lt;code&gt;randn()&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s see them in action.&lt;/p&gt;
&lt;h4 id=&#34;_input_-9&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# sorting test_arr

println(&amp;quot;Before sorting the test_array: &amp;quot;, test_arr)

sort!(test_arr)

println(&amp;quot;After sorting the test_array: &amp;quot;, test_arr)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-9&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Before sorting the test_array: [1, 2525, 2, 4, 5]
After sorting the test_array: [1, 2, 4, 5, 2525]
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-10&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# create an 2*3 array of ones

ones_arr = ones(2, 3)

ones_arr
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-10&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;2Ã3 Array{Float64,2}:
 1.0  1.0  1.0
 1.0  1.0  1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-11&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# create an 2*3 array of zeros

zeros_arr = zeros(2, 3)

zeros_arr
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-11&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;2Ã3 Array{Float64,2}:
 0.0  0.0  0.0
 0.0  0.0  0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-12&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# create an array size of 2*5 with random variable from uniform distribution 

rand(2, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-12&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;2Ã5 Array{Float64,2}:
 0.451961  0.309916  0.193709  0.602781  0.160294
 0.737481  0.523093  0.662101  0.946056  0.804512
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-13&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# create an array size of 2*5 with random variable from normal distribution 

randn(2, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-13&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;2Ã5 Array{Float64,2}:
  0.907519  2.42625  0.909603  -0.420501   0.632623
 -1.78817   0.63605  0.17628    0.419475  -0.200928
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;dictionary&#34;&gt;Dictionary&lt;/h3&gt;
&lt;p&gt;Dictionary is a collection of key-value pairs, where we can access the value using its key. We can declare dictionary in the following three ways:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
dict_name = Dict()
dict_name = Dict(key1 =&amp;gt; value1, key2 =&amp;gt; value2, ....)
dict_name = Dict{key_datatype, value_datatype}(key1 =&amp;gt; value1, key2 =&amp;gt; value2, ....)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here in the third syntax of declaring dictionary, we can specify the data types of keys and values.&lt;/p&gt;
&lt;h4 id=&#34;_input_-14&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;dict1 = Dict()

dict1[&amp;quot;Bangladesh&amp;quot;] = &amp;quot;Dhaka&amp;quot;
dict1[&amp;quot;Sweden&amp;quot;] = &amp;quot;Stockholm&amp;quot;

println(&amp;quot;Elements of dict1: &amp;quot;, dict1)

dict2 = Dict(&amp;quot;Apple&amp;quot; =&amp;gt; &amp;quot;Red&amp;quot;, &amp;quot;Orange&amp;quot; =&amp;gt; &amp;quot;Orange&amp;quot;, &amp;quot;Banana&amp;quot; =&amp;gt; &amp;quot;Yellow&amp;quot;)

println(&amp;quot;Elements of dict2: &amp;quot;, dict2)

dict3 = Dict{String, Int64}(&amp;quot;One&amp;quot; =&amp;gt; 1, &amp;quot;Two&amp;quot; =&amp;gt; 2, &amp;quot;Three&amp;quot; =&amp;gt; 3)

println(&amp;quot;Elements of dict3: &amp;quot;, dict3)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-14&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Elements of dict1: Dict{Any,Any}(&amp;quot;Bangladesh&amp;quot; =&amp;gt; &amp;quot;Dhaka&amp;quot;,&amp;quot;Sweden&amp;quot; =&amp;gt; &amp;quot;Stockholm&amp;quot;)
Elements of dict2: Dict(&amp;quot;Apple&amp;quot; =&amp;gt; &amp;quot;Red&amp;quot;,&amp;quot;Orange&amp;quot; =&amp;gt; &amp;quot;Orange&amp;quot;,&amp;quot;Banana&amp;quot; =&amp;gt; &amp;quot;Yellow&amp;quot;)
Elements of dict3: Dict(&amp;quot;One&amp;quot; =&amp;gt; 1,&amp;quot;Two&amp;quot; =&amp;gt; 2,&amp;quot;Three&amp;quot; =&amp;gt; 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;accessing-dictionary-elements&#34;&gt;Accessing Dictionary Elements&lt;/h4&gt;
&lt;p&gt;To access the elements of dictionary we need to access them via their key. Suppose in &lt;code&gt;dict3&lt;/code&gt;, we want to access the value &lt;code&gt;3&lt;/code&gt;. So, we can do that by this:&lt;/p&gt;
&lt;h4 id=&#34;_input_-15&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;println(dict3[&amp;quot;Three&amp;quot;])
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-15&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, we can access the keys and values of a dictionary seperately by using &lt;code&gt;keys()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; method respectively.&lt;/p&gt;
&lt;h4 id=&#34;_input_-16&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;println(&amp;quot;Keys of dict3: &amp;quot;, keys(dict3))

println(&amp;quot;Values of dict3: &amp;quot;, values(dict3))
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-16&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Keys of dict3: [&amp;quot;One&amp;quot;, &amp;quot;Two&amp;quot;, &amp;quot;Three&amp;quot;]
Values of dict3: [1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;set&#34;&gt;Set&lt;/h3&gt;
&lt;p&gt;Another data structure of &lt;code&gt;julia&lt;/code&gt; is &lt;code&gt;set&lt;/code&gt;. &lt;code&gt;Set&lt;/code&gt; is like &lt;code&gt;array&lt;/code&gt;, its mutable. But the basic difference between them is, &lt;code&gt;set&lt;/code&gt; holds only &lt;code&gt;unique element&lt;/code&gt;. So, there will be no duplicate element in a &lt;code&gt;set&lt;/code&gt;. And the basic syntax of a set is:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
set_name = Set([item1, item2, item3, ....])

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can do operations like union, intersection, difference between two sets using &lt;code&gt;union()&lt;/code&gt;, &lt;code&gt;intersect()&lt;/code&gt;, and &lt;code&gt;setdiff()&lt;/code&gt; methods respectively. Also we can check if one set is subset of another one by using &lt;code&gt;issubset()&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;Here we will create 2 sets and apply these functions on them.&lt;/p&gt;
&lt;h4 id=&#34;_input_-17&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;set1 = Set([1, 2, 3, 2, 5, &amp;quot;new&amp;quot;])

println(&amp;quot;Set1: &amp;quot;, set1)

set2 = Set([5, 2])

println(&amp;quot;Set1: &amp;quot;, set2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-17&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Set1: Set(Any[&amp;quot;new&amp;quot;, 2, 3, 5, 1])
Set1: Set([2, 5])
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-18&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# union between two sets

union(set1, set2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-18&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Set{Any} with 5 elements:
  &amp;quot;new&amp;quot;
  2
  3
  5
  1
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-19&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# intersection between two sets

intersect(set1, set2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-19&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Set{Any} with 2 elements:
  2
  5
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-20&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# set difference between two sets

setdiff(set1, set2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-20&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Set{Any} with 3 elements:
  &amp;quot;new&amp;quot;
  3
  1
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-21&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# Checking if set2 is subset of set1

issubset(set2, set1)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-21&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As, set is mutable, we can add or delete elements from it. To add elements we can use &lt;code&gt;push()&lt;/code&gt; method and to delete elements we can use &lt;code&gt;delete()&lt;/code&gt; method. For deletion, we need to tell specifically which element from a set we want to delete.&lt;/p&gt;
&lt;h4 id=&#34;_input_-22&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;push!(set1, &amp;quot;hello&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-22&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Set{Any} with 6 elements:
  &amp;quot;new&amp;quot;
  2
  3
  &amp;quot;hello&amp;quot;
  5
  1
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_input_-23&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;delete!(set1, &amp;quot;hello&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;_output_-23&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Set{Any} with 5 elements:
  &amp;quot;new&amp;quot;
  2
  3
  5
  1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, thats it.&lt;/p&gt;
&lt;p&gt;Keep Practicing.&lt;/p&gt;
&lt;p&gt;Good luck, May the Julia be with you!!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Other posts in this series:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://fahim-sikder.github.io/post/julia-tutorial-part-1/&#34;&gt;Julia Tutorial Part 1: Installations &amp;amp; Basics&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Julia Tutorial Part 1: Installations &amp; Basics</title>
      <link>https://fahim-sikder.github.io/post/julia-tutorial-part-1/</link>
      <pubDate>Wed, 08 Jul 2020 14:24:00 +0600</pubDate>
      <guid>https://fahim-sikder.github.io/post/julia-tutorial-part-1/</guid>
      <description>&lt;h2 id=&#34;introduction-installations-and-basics&#34;&gt;Introduction, Installations, and Basics&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Julia&lt;/code&gt; is a open source programming language. It was designed from the beginning for high &lt;a href=&#34;https://julialang.org/benchmarks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;performance&lt;/a&gt;. Julia programs compile to efficient native code for multiple platforms via LLVM. To install it we need to download it&amp;rsquo;s binary from &lt;a href=&#34;https://julialang.org/downloads/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. We are going to use &lt;code&gt;Jupyter Notebook&lt;/code&gt; as the code editor. But to do that we need to link the &lt;code&gt;Jupyter Notebook&lt;/code&gt; with &lt;code&gt;Julia&lt;/code&gt;. After installing &lt;code&gt;Julia&lt;/code&gt;, open the Julia Command prompt with administration rights. Then type the following code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;
using Pkg
Pkg.add(&amp;quot;IJulia&amp;quot;)


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These will integrate &lt;code&gt;Julia&lt;/code&gt; environment with &lt;code&gt;Jupyter Notebbok&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;N.B: We are assuming that your system has already Jupyter notebook installed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Julia&lt;/code&gt; file has &lt;code&gt;.jl&lt;/code&gt; extensions. It&amp;rsquo;s time to write our first program. We will print &lt;code&gt;Hello Julia!&lt;/code&gt;. The print function in &lt;code&gt;julia&lt;/code&gt; is &lt;code&gt;println&lt;/code&gt;.&lt;/p&gt;
&lt;h5 id=&#34;_input_&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;println(&amp;quot;Hello Julia!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;_output_&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;Hello Julia!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Congratulations! We have just run your first program in &lt;code&gt;Julia&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;variables--data-types&#34;&gt;Variables &amp;amp; Data Types&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Julia&lt;/code&gt; support 5 basic data types.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Integer&lt;/li&gt;
&lt;li&gt;Float&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;Character&lt;/li&gt;
&lt;li&gt;Boolean&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can easily declare a variable just assigining the value in it. We don&amp;rsquo;t need to give the datatype when declaring a variable. Also we can see what is the datatype of a variable by using &lt;code&gt;typeof&lt;/code&gt; function. Lets see an example.&lt;/p&gt;
&lt;h5 id=&#34;_input_-1&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;first = 1

println(typeof(first))

second = 22.0

println(typeof(second))

third = true
println(typeof(third))

fourth = &amp;quot;Hello World!&amp;quot;
println(typeof(fourth))

fifth = &#39;L&#39;
println(typeof(fifth))
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;_output_-1&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;Int64
Float64
Bool
String
Char
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;String&lt;/code&gt; needs to be in double quotes or triple quotes. If we put &lt;code&gt;String&lt;/code&gt; in single quote, it will show error. Only &lt;code&gt;Character&lt;/code&gt; will be in single quote.&lt;/p&gt;
&lt;h5 id=&#34;_input_-2&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;#This is an intenional error

strr = &#39;Hello world&#39;
println(strr)
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;_output_-2&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;syntax: invalid character literal
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;constant&#34;&gt;Constant&lt;/h3&gt;
&lt;p&gt;To declare a constant we need to use &lt;code&gt;const&lt;/code&gt; keyword. After defining a constant we can redefine it, but it will give us a warning. We only can redefine in the same datatype. Suppose: we created a constant with integer datatype with a value, so we can redefine it with another integer value though it will give a warning, but we can not redefine with another datatype. It will give an error.&lt;/p&gt;
&lt;h5 id=&#34;_input_-3&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;const var1 = 2
println(var1)
var1 = 3
println(var1)

#this will give error
var1 = 4.9
println(var1)
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;_output_-3&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;2
3


WARNING: redefining constant var1



invalid redefinition of constant var1



Stacktrace:

 [1] top-level scope at In[4]:5
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;strings&#34;&gt;Strings&lt;/h3&gt;
&lt;p&gt;As we have mentioned earlier, &lt;code&gt;String&lt;/code&gt; needs to be in double or triple quotes.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;mystr = &amp;quot;Hey this is a string&amp;quot;

mystr2 = &amp;quot;&amp;quot;&amp;quot;
    this is a multiple line string
    this string has 2 lines
    &amp;quot;&amp;quot;&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see the length of a string using the &lt;code&gt;length&lt;/code&gt; function.&lt;/p&gt;
&lt;h5 id=&#34;_input_-4&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;mystr = &amp;quot;Hey this is a string&amp;quot;

println(length(mystr))
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;_output_-4&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;20
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;taking-seperate-characters-from-string&#34;&gt;Taking seperate characters from string&lt;/h4&gt;
&lt;p&gt;We can access seperate characters from the string using index. Here we need to keep in mind that, unlike other programming language, &lt;code&gt;Julia&lt;/code&gt; access its first character from a string using index 1. Suppose in &lt;code&gt;mystr&lt;/code&gt; we want access the first character &lt;code&gt;H&lt;/code&gt; , so we need to access it using &lt;code&gt;mystr[1]&lt;/code&gt;. Now, if we want to access the last character of a string we need to use the &lt;code&gt;end&lt;/code&gt; keyword. So, in &lt;code&gt;mystr&lt;/code&gt; the last character is &lt;code&gt;g&lt;/code&gt; and we can access it by using &lt;code&gt;mystr[end]&lt;/code&gt;.&lt;/p&gt;
&lt;h5 id=&#34;_input_-5&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;println(mystr[1])
println(mystr[end])
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;_output_-5&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;H
g
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;substring&#34;&gt;Substring&lt;/h4&gt;
&lt;p&gt;We also can get a substring from a string by slicing it. To do that we need to use &lt;code&gt;:&lt;/code&gt; this. Suppose we want &lt;code&gt;this&lt;/code&gt; as substring from &lt;code&gt;mystr&lt;/code&gt; string. So, &lt;code&gt;this&lt;/code&gt; started from index number &lt;code&gt;5&lt;/code&gt; and ended in index number &lt;code&gt;8&lt;/code&gt;. Then we need to access it using &lt;code&gt;mystr[5:8]&lt;/code&gt;.&lt;/p&gt;
&lt;h5 id=&#34;_input_-6&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;println(mystr[5:8])
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;_output_-6&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;this
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;string-concatenation&#34;&gt;String Concatenation&lt;/h4&gt;
&lt;p&gt;To concatenate one string with another we need to use &lt;code&gt;*&lt;/code&gt; keyword. Suppose we have two strings. &lt;code&gt;str1 = &amp;quot;Hello&amp;quot;&lt;/code&gt; and &lt;code&gt;str2 = &amp;quot;World&amp;quot;&lt;/code&gt;. We can merge them like this:&lt;/p&gt;
&lt;h5 id=&#34;_input_-7&#34;&gt;&lt;em&gt;input&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;str1 = &amp;quot;Hello&amp;quot;
str2 = &amp;quot;World&amp;quot;

println(str1 * &amp;quot;, &amp;quot; * str2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;_output_-7&#34;&gt;&lt;em&gt;output&lt;/em&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;Hello, World
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thats it for this tutorial.&lt;/p&gt;
&lt;p&gt;Good Luck, and May the Julia be with you!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Other posts in this series:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://fahim-sikder.github.io/post/julia-tutorial-part-2-data-structures/&#34;&gt;Julia Tutorial Part 2: Data Structures&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>à¦à¦à¦°à§à¦ªà§ à¦ªà¦¿à¦à¦à¦à¦¡à¦¿</title>
      <link>https://fahim-sikder.github.io/post/phd-in-europe/</link>
      <pubDate>Wed, 01 Jul 2020 19:52:22 +0600</pubDate>
      <guid>https://fahim-sikder.github.io/post/phd-in-europe/</guid>
      <description>&lt;p&gt;à¦à¦¤ à¦¬à¦à¦° à¦¥à§à¦à§ à¦ªà¦¿à¦à¦à¦à¦¡à¦¿ à¦¤à§ à¦à¦¿à¦­à¦¾à¦¬à§ à¦à¦ªà§à¦²à¦¾à¦ à¦à¦°à¦¾ à¦¯à¦¾à§ à¦¸à§à¦à¦¾ à¦¨à¦¿à§à§ à¦®à§à¦à¦¾à¦®à§à¦à¦¿ à¦à¦¬à§à¦·à¦£à¦¾ à¦¶à§à¦°à§ à¦à¦°à§ à¦¦à¦¿à§à§à¦à¦¿à¦²à¦¾à¦®à¥¤ à¦¸à§à¦ à¦à¦¬à§à¦·à¦£à¦¾à¦° à¦«à¦²à§ à¦à¦¨à§à¦ à¦à¦¿à¦à§ à¦à¦¾à¦¨à¦¤à§ à¦ªà§à§à§à¦à¦¿à¥¤ à¦à¦ à¦ªà§à¦·à§à¦à§à¦° à¦®à§à¦² à¦à¦¦à§à¦¦à§à¦¶à§à¦¯ à¦¯à¦¾ à¦à§à¦¨à§à¦à¦¿ à¦¤à¦¾ à¦¸à¦¬à¦¾à¦° à¦¸à¦¾à¦®à¦¨à§ à¦¤à§à¦²à§ à¦§à¦°à¦¾à¥¤&lt;/p&gt;
&lt;p&gt;à¦à¦à¦°à§à¦ªà§à¦° à¦ªà§à¦°à¦¾à§ à¦¸à¦¬ à¦¬à¦¿à¦¶à§à¦¬à¦¬à¦¿à¦¦à§à¦¯à¦¾à¦²à§à§à¦° à¦à§à§à¦¬à¦¸à¦¾à¦à¦à§ à¦à¦à¦à¦¿ à¦ªà§à¦ à¦¥à¦¾à¦à§à¦ &lt;strong&gt;Vacancy / Work at &lt;em&gt;university name&lt;/em&gt;&lt;/strong&gt; à¦à¦ à¦¨à¦¾à¦®à§à¥¤ à¦ªà¦¿à¦à¦à¦à¦¡à¦¿, à¦ªà§à¦¸à§à¦-à¦¡à¦, à¦°à¦¿à¦¸à¦¾à¦°à§à¦à¦¾à¦° à¦à¦°à§ à¦à¦¨à§à¦ à¦à¦¬à§à¦° à¦à§à¦¯à¦¾à¦¡à¦­à¦¾à¦°à§à¦à¦¾à¦à¦à¦®à§à¦¨à§à¦ à¦à¦ à¦ªà§à¦à¦à§à¦²à§à¦¤à§ à¦¦à§à§à¦¾ à¦¹à§ (à¦à¦à¦°à§à¦ªà§ à¦à¦°à¦¾ à¦ªà¦¿à¦à¦à¦à¦¡à¦¿ à¦à§ à¦à¦¬ à¦¹à¦¿à¦¸à§à¦¬à§ à¦à¦¾à¦à¦¨à§à¦ à¦à¦°à§)à¥¤ à¦ªà§à¦°à¦¤à¦¿à¦à¦¾ à¦à¦¬ à¦à¦° à¦à§à¦¯à¦¾à¦¡à¦­à¦¾à¦°à§à¦à¦¾à¦à¦à¦®à§à¦¨à§à¦ à¦ à¦à§à¦¨ à¦à¦ªà¦¿à¦à§à¦° à¦à¦ªà¦° à¦à¦¾à¦ à¦à¦°à¦¾ à¦¹à¦¬à§, à¦à¦ªà§à¦²à¦¾à¦ à¦à¦°à¦¾à¦° à¦à¦¨à§à¦¯ à¦¨à§à¦¨à§à¦¯à¦¤à¦® à¦¯à§à¦à§à¦¯à¦¤à¦¾ à¦à¦¿, à¦à¦ªà§à¦²à¦¾à¦ à¦à¦°à¦¤à§ à¦¹à¦²à§ à¦à¦¿ à¦à¦¿ à¦¦à¦°à¦à¦¾à¦° à¦ªà§à¦¬à§ à¦¸à¦¬ à¦¦à§à§à¦¾ à¦¥à¦¾à¦à§à¥¤&lt;/p&gt;
&lt;p&gt;à¦ªà¦¿à¦à¦à¦à¦¡à¦¿ à¦¤à§ à¦à¦ªà§à¦²à¦¾à¦ à¦à¦°à¦¾à¦° à¦¯à§à¦à§à¦¯à¦¤à¦¾(à¦¬à¦¿à¦¶à§à¦¬à¦¬à¦¿à¦¦à§à¦¯à¦¾à¦²à§ à¦¸à¦¾à¦ªà§à¦à§à¦·à§ à¦ªà¦°à¦¿à¦¬à¦°à§à¦¤à¦¨ à¦¹à¦¤à§ à¦ªà¦¾à¦°à§):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;à¦à§à¦¯à¦¾à¦¡à¦­à¦¾à¦°à§à¦à¦¾à¦à¦à¦®à§à¦¨à§à¦ à¦à¦° à¦à¦ªà¦¿à¦ à¦à¦¨à§à¦¯à¦¾à§à§ à¦°à¦¿à¦²à§à¦­à§à¦¨à§à¦ à¦à¦®à¦à¦¸à¦¸à¦¿ à¦¡à¦¿à¦à§à¦°à§&lt;/li&gt;
&lt;li&gt;à¦à¦à¦°à§à¦à¦¿ à¦¦à¦à§à¦·à¦¤à¦¾à¦° à¦¸à¦¾à¦°à§à¦à¦¿à¦«à¦¿à¦à§à¦ (à¦®à¦¿à¦¡à¦¿à§à¦¾à¦® à¦à¦« à¦à¦¨à§à¦¸à¦à§à¦°à¦¾à¦à¦¶à¦¨ à¦¦à¦¿à§à§ à¦à¦¨à§à¦ à¦¯à¦¾à§à¦à¦¾à§ à¦à¦¾à¦ à¦¹à§)
&lt;ul&gt;
&lt;li&gt;IELTS (à¦¨à¦¿à¦®à§à¦¨à§ à¦à¦­à¦¾à¦°à¦à¦²à¦ à§¬.à§« à¦à¦° à¦à¦²à¦¾à¦¦à¦¾ à¦¬à§à¦¯à¦¾à¦¨à§à¦¡ à¦à§à¦²à§à¦¤à§ à¦¨à¦¿à¦®à§à¦¨à§ à§¬ (à¦à§à¦à¦¨à¦¿à¦à§à¦¯à¦¾à¦² à¦¸à¦¾à¦¬à¦à§à¦à§à¦à§à¦° à¦à¦¨à§à¦¯))&lt;/li&gt;
&lt;li&gt;à¦®à¦¿à¦¡à¦¿à§à¦¾à¦® à¦à¦« à¦à¦¨à§à¦¸à¦à§à¦°à¦¾à¦à¦¶à¦¨ à¦¸à¦¾à¦°à§à¦à¦¿à¦«à¦¿à¦à§à¦(à¦à¦®à¦à¦¸à¦¸à¦¿, à¦¬à¦¿à¦à¦¸à¦¸à¦¿ à¦¯à§ à¦à¦®à¦°à¦¾ à¦à¦à¦°à§à¦à¦¿ à¦­à¦¾à¦°à§à¦¸à¦¨à§ à¦ªà§à§à¦à¦¿ à¦¸à§à¦ à¦¸à¦¾à¦°à§à¦à¦¿à¦«à¦¿à¦à§à¦ à¦­à¦¾à¦°à§à¦¸à¦¿à¦à¦¿ à¦¥à§à¦à§ à¦¸à¦à¦à§à¦°à¦¹ à¦à¦°à¦¾ à¦¯à¦¾à§)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;à¦à¦ªà§à¦²à¦¾à¦ à¦à¦°à¦¾à¦° à¦à¦¨à§à¦¯ à¦ªà§à¦°à§à§à¦à¦¨à§à§ à¦à¦¾à¦à¦à¦ªà¦¤à§à¦°(à¦¬à¦¿à¦¶à§à¦¬à¦¬à¦¿à¦¦à§à¦¯à¦¾à¦²à§ à¦¸à¦¾à¦ªà§à¦à§à¦·à§ à¦ªà¦°à¦¿à¦¬à¦°à§à¦¤à¦¨ à¦¹à¦¤à§ à¦ªà¦¾à¦°à§) à¦à¦¬à¦ à¦à¦¿ à¦à¦¿ à¦²à¦¾à¦à¦¬à§ à¦¸à§à¦à¦¾ à¦à§à¦¯à¦¾à¦¡à¦­à¦¾à¦°à§à¦à¦¾à¦à¦à¦®à§à¦¨à§à¦ à¦à¦ à¦¦à§à§à¦¾ à¦¥à¦¾à¦à§à¥¤ à¦¸à¦¾à¦§à¦¾à¦°à¦£à¦¤ à¦¯à¦¾ à¦¯à¦¾ à¦²à¦¾à¦à§ à¦¸à§à¦à¦¾ à¦à¦à¦¾à¦¨à§ à¦¦à§à§à¦¾ à¦¹à¦²à§:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;à¦¸à¦¿à¦­à¦¿&lt;/li&gt;
&lt;li&gt;à¦à¦¾à¦­à¦¾à¦° à¦²à§à¦à¦¾à¦°&lt;/li&gt;
&lt;li&gt;à¦ªà¦¾à¦¸à¦ªà§à¦°à§à¦&lt;/li&gt;
&lt;li&gt;à¦°à¦¿à¦¸à¦¾à¦°à§à¦ à¦ªà§à¦°à¦ªà§à¦¸à¦¾à¦² (à¦à§à¦¯à¦¾à¦¡à¦­à¦¾à¦°à§à¦à¦¾à¦à¦à¦®à§à¦¨à§à¦ à¦ à¦¯à§ à¦à¦ªà¦¿à¦ à¦à¦° à¦¸à¦®à§à¦ªà¦°à§à¦à§ à¦à¦²à§à¦à¦¨à¦¾ à¦à¦°à¦¾ à¦¹à§à§à¦à§ à¦¸à§à¦ à¦à¦ªà¦¿à¦à§à¦° à¦à¦ªà¦°à§ à¦à¦¾à¦°à§à¦¨à§à¦ à¦à§à¦à¦¨à§à¦²à¦à¦¿ à¦¬à§à¦¯à¦¬à¦¹à¦¾à¦° à¦à¦°à§ à¦ªà§à¦°à¦ªà§à¦¸à¦¾à¦² à¦¤à§à¦°à¦¿ à¦à¦°à¦¤à§ à¦¹à¦¬à§ à¦à¦¬à¦ à¦à¦¬à¦¶à§à¦¯à¦ à¦¯à¦¾à¦¤à§ à¦à¦¾à¦ à¦à¦ªà¦¿ à¦ªà§à¦¸à§à¦ à¦¨à¦¾ à¦à¦°à¦¾ à¦¹à§à¥¤ à¦ªà§à¦°à¦«à§à¦¸à¦°à¦¦à§à¦° à¦à¦¾à¦à§ plagiarism checker à¦¥à¦¾à¦à§à¥¤ à¦¯à¦¦à¦¿ à¦¦à§à¦à§ à¦à¦ªà¦¿ à¦à¦°à¦¾ à¦¨à¦à¦¦à§ à¦¬à¦¾à¦¦ à¦¦à¦¿à§à§ à¦¦à¦¿à¦¬à§à¥¤)&lt;/li&gt;
&lt;li&gt;à¦à¦®à¦à¦¸à¦¸à¦¿, à¦¬à¦¿à¦à¦¸à¦¸à¦¿ à¦à¦° à¦à§à¦°à¦¾à¦¨à§à¦¸à¦à§à¦°à¦¿à¦ªà§à¦ à¦à¦° à¦­à§à¦°à¦¿à¦«à¦¾à¦à¦¡ à¦à¦ªà¦¿ (à¦¨à¦¿à¦ à¦¨à¦¿à¦ à¦¬à¦¿à¦¶à§à¦¬à¦¬à¦¿à¦¦à§à¦¯à¦¾à¦²à§ à¦¥à§à¦à§ à¦à§à¦°à¦¾à¦¨à§à¦¸à¦à§à¦°à¦¿à¦ªà§à¦à§à¦° à¦«à¦à§à¦à¦ªà¦¿ à¦­à§à¦°à¦¿à¦«à¦¾à¦ à¦à¦°à¦¿à§à§ à¦à¦¨à¦¤à§ à¦¹à¦¬à§ à¦à¦à§à¦¸à¦¾à¦® à¦à¦¨à§à¦à§à¦°à§à¦²à¦¾à¦° à¦à¦«à¦¿à¦¸ à¦¥à§à¦à§)&lt;/li&gt;
&lt;li&gt;à§¨à¦à¦¿/à§©à¦à¦¿ à¦°à¦¿à¦à¦®à§à¦¨à§à¦¡à§à¦¶à¦¨ à¦²à§à¦à¦¾à¦°&lt;/li&gt;
&lt;li&gt;à¦¯à¦¦à¦¿ à¦à§à¦¨ à¦ªà¦¾à¦¬à¦²à¦¿à¦à§à¦¶à¦¨ à¦¥à¦¾à¦à§&lt;/li&gt;
&lt;li&gt;à¦à§à¦¨ à¦à§à¦¯à¦¾à¦à§à¦¾à¦°à§à¦¡, à¦à¦à§à¦¸à¦ªà§à¦°à¦¿à§à§à¦¨à§à¦¸ à¦¸à¦¾à¦°à§à¦à¦¿à¦«à¦¿à¦à§à¦ à¦¥à¦¾à¦à¦²à§ à¦¯à§à¦ à¦à¦°à¦¾ à¦¯à§à¦¤à§ à¦ªà¦¾à¦°à§&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;à¦¸à¦¬à¦à§à¦²à§ à¦à¦¿à¦¨à¦¿à¦¸ à¦à¦à¦¸à¦¾à¦¥à§ à¦ªà¦¿à¦¡à¦¿à¦à¦« à¦à¦°à§ à¦¸à¦¾à¦¬à¦®à¦¿à¦ à¦à¦°à¦¤à§ à¦¹à¦¬à§à¥¤ à¦¸à¦¾à¦¬à¦®à¦¿à¦ à¦à¦°à¦¾à¦° à¦²à¦¿à¦à§à¦à¦ à¦¸à§à¦ à¦à§à¦¯à¦¾à¦¡à¦­à¦¾à¦°à§à¦à¦¾à¦à¦à¦®à§à¦¨à§à¦ à¦ à¦¦à§à§à¦¾ à¦¥à¦¾à¦à¦¬à§à¥¤ à¦ªà¦¿à¦¡à¦¿à¦à¦« à¦®à¦¾à¦°à§à¦, à¦¸à§à¦ªà§à¦²à¦¿à¦ à¦à¦°à¦¾à¦° à¦à¦¨à§à¦¯ &lt;a href=&#34;https://pdfsam.org/download-pdfsam-basic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDFSam Basic software&lt;/a&gt; à¦à¦¾ à¦à¦à¦ à¦à¦°à¦¾ à¦¯à§à¦¤à§ à¦ªà¦¾à¦°à§à¥¤ à¦à¦ªà§à¦²à¦¾à¦ à¦à¦°à¦¾à¦° à¦ªà¦°à§ à¦¤à¦¾à¦°à¦¾ à¦°à¦¿à¦­à¦¿à¦ à¦à¦°à¦¬à§à¥¤ à¦­à¦¾à¦²à§ à¦²à¦¾à¦à¦²à§ à¦à¦¨à§à¦à¦¾à¦°à§à¦­à¦¿à¦ à¦à¦° à¦à¦¨à§à¦¯ à¦à¦² à¦ªà¦¾à¦¬à§à¦¨à¥¤ à¦¤à¦¾à¦°à¦ªà¦° à¦¹à§à§à¦ à¦¯à§à¦¤à§ à¦ªà¦¾à¦°à§ à¦ªà¦¿à¦à¦à¦à¦¡à¦¿ à¦¶à§à¦°à§ à¦à¦°à¦¾à¦° à¦¸à§à¦¯à§à¦à¥¤ à¦à¦ à¦²à§à¦à¦¾ à¦à¦¾à¦°à§ à¦à¦ªà¦à¦¾à¦°à§ à¦à¦¸à¦²à§ à¦à¦·à§à¦ à¦¸à¦¾à¦°à§à¦¥à¦à¥¤ à¦¶à§à¦­ à¦à¦¾à¦®à¦¨à¦¾à¥¤&lt;/p&gt;
&lt;p&gt;à¦à¦¿à¦à§ Vacancy Page à¦à¦° à¦²à¦¿à¦à¦ à¦¦à¦¿à§à§ à¦¦à¦¿à¦à§à¦à¦¿à¦&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;University of Copenhagen: &lt;a href=&#34;https://employment.ku.dk/phd/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://employment.ku.dk/phd/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Technical University of Denmark: &lt;a href=&#34;https://www.dtu.dk/english/About/JOB-and-CAREER/vacant-positions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.dtu.dk/english/About/JOB-and-CAREER/vacant-positions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aalborg University: &lt;a href=&#34;https://www.vacancies.aau.dk/phd-positions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.vacancies.aau.dk/phd-positions/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;University of Portsmouth: &lt;a href=&#34;https://www.port.ac.uk/study/postgraduate/postgraduate-research/research-degrees/phd/explore-our-projects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.port.ac.uk/study/postgraduate/postgraduate-research/research-degrees/phd/explore-our-projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;University of Antwerp: &lt;a href=&#34;https://www.uantwerpen.be/en/jobs/vacancies/ap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.uantwerpen.be/en/jobs/vacancies/ap/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LinkÃ¶ping University: &lt;a href=&#34;https://liu.se/en/work-at-liu/vacancies&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://liu.se/en/work-at-liu/vacancies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chalmers University: &lt;a href=&#34;https://www.chalmers.se/en/about-chalmers/Working-at-Chalmers/Vacancies/Pages/default.aspx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.chalmers.se/en/about-chalmers/Working-at-Chalmers/Vacancies/Pages/default.aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lulea University: &lt;a href=&#34;https://www.ltu.se/ltu/Lediga-jobb?l=en&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.ltu.se/ltu/Lediga-jobb?l=en&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Uppsala University: &lt;a href=&#34;https://www.uu.se/en/about-uu/join-us/jobs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.uu.se/en/about-uu/join-us/jobs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stockholm University: &lt;a href=&#34;https://www.su.se/english/about-the-university/work-at-su/available-jobs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.su.se/english/about-the-university/work-at-su/available-jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lund University: &lt;a href=&#34;https://www.lunduniversity.lu.se/vacancies&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.lunduniversity.lu.se/vacancies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;University of Gothenburg: &lt;a href=&#34;https://www.gu.se/en/about-the-university/work-at-the-university-of-gothenburg/vacancies&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.gu.se/en/about-the-university/work-at-the-university-of-gothenburg/vacancies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;KTH Royal Institute of Technology: &lt;a href=&#34;https://www.kth.se/en/om/work-at-kth/lediga-jobb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.kth.se/en/om/work-at-kth/lediga-jobb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ãrebro University: &lt;a href=&#34;https://www.oru.se/english/working-at-orebro-university/jobs-and-vacancies/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.oru.se/english/working-at-orebro-university/jobs-and-vacancies/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Swedish University of Agricultural Sciences: &lt;a href=&#34;https://www.slu.se/en/about-slu/work-at-slu/jobs-vacancies/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.slu.se/en/about-slu/work-at-slu/jobs-vacancies/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;UmeÃ¥ University: &lt;a href=&#34;https://www.umu.se/en/work-with-us/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.umu.se/en/work-with-us/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Karlstads universitet: &lt;a href=&#34;https://www.kau.se/en/work-us/work/vacancies&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.kau.se/en/work-us/work/vacancies&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Privacy-Preserving Synthetic Trajectory Data Generation</title>
      <link>https://fahim-sikder.github.io/publication/privacy-preserving-trajectory-data-generation/</link>
      <pubDate>Sat, 27 Jun 2020 23:03:59 +0600</pubDate>
      <guid>https://fahim-sikder.github.io/publication/privacy-preserving-trajectory-data-generation/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Bangla Handwritten Digit Recognition &amp; Generation</title>
      <link>https://fahim-sikder.github.io/publication/digit-generate/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://fahim-sikder.github.io/publication/digit-generate/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Smart Disaster Notification System</title>
      <link>https://fahim-sikder.github.io/publication/smart-disaster/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://fahim-sikder.github.io/publication/smart-disaster/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Predicting Students Yearly Performance using Neural Network: A Case Study of BSMRSTU</title>
      <link>https://fahim-sikder.github.io/publication/predict-performance/</link>
      <pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://fahim-sikder.github.io/publication/predict-performance/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://fahim-sikder.github.io/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://fahim-sikder.github.io/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
